"""
CredentialLocations
===================
Location of API credential files. This is a singleton.

:Authors:
    Gilles Bellot
"""

########################################################################################################################
# IMPORTS ##############################################################################################################
########################################################################################################################
import pathlib
from dataclasses import dataclass


########################################################################################################################
# DEFINITIONS ##########################################################################################################
########################################################################################################################

########################################################################################################################
# CLASS ################################################################################################################
########################################################################################################################
@dataclass(frozen=True)
class CredentialLocations:
    __instance = None

    # PATHS ############################################################################################################
    _pathToBaseDirectory = pathlib.Path().absolute()
    _pathToCredentials = _pathToBaseDirectory.joinpath('credentials')

    # DB CONNECTIONS ###################################################################################################
    postgreSQL = _pathToCredentials.joinpath('postgresql.creds')
    meiliSearch = _pathToCredentials.joinpath('meilisearch.creds')
    zitadel = _pathToCredentials.joinpath('zitadel.creds')
    homer = _pathToCredentials.joinpath('homer.creds')

    ####################################################################################################################
    # CONSTRUCTOR ######################################################################################################
    ####################################################################################################################
    def __new__(cls, *args, **kwargs):
        if cls.__instance is None:
            cls.__instance = super()
        return cls.__instance
